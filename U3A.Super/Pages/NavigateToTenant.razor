@page "/NavigateToTenant"

@using Microsoft.Data.SqlClient
@inject IJSRuntime js
@inject IDbContextFactory<TenantStoreDbContext> Tenantdbfactory
@inject NavigationManager navMan
@implements IDisposable


@attribute [Authorize]

@if (!IsReady)
{
    <em>Loading...</em>
}
else
{

    <div class="col-md-6">
        <div class="row  align-content-start">
            <h2>Navigate to Tenant Details</h2>
        </div>

        <DxFormLayout>
            <DxFormLayoutGroup Caption="Select Tenant">
                <DxFormLayoutItem Caption="Tenant" ColSpanMd="12">
                    <DxComboBox Data="@tenants"
                                TextFieldName="@nameof(TenantInfo.Identifier)"
                                @bind-Value=@selectedTenant>
                    </DxComboBox>
                </DxFormLayoutItem>
                <DxButton Text="Navigate" Click="OnNavigate" CssClass="m-2 w-100" />
            </DxFormLayoutGroup>
        </DxFormLayout>

    </div>
}
@code {
    IEnumerable<TenantInfo>? tenants;
    bool IsReady = false;
    bool IsEditEnabled = false;
    int ActiveTabIndex { get; set; } = 0;
    private SystemSettings? systemSettings { get; set; }
    TenantStoreDbContext? dbc { get; set; }
    TenantInfo selectedTenant = new();

    internal string? ErrorHeader;
    internal string? ErrorMessage;

    protected override void OnInitialized()
    {
        // wire up the data
        dbc = Tenantdbfactory.CreateDbContext();
        tenants = dbc.TenantInfo.OrderBy(x => x.Identifier);
        if (tenants.Count() > 0) { selectedTenant = tenants.FirstOrDefault()!; }
        IsReady = true;
    }

    void OnNavigate()
    {
        navMan.NavigateTo($"https://{selectedTenant?.Identifier}.u3admin.org.au", true);
    }

    async Task OnEnableEdit()
    {
        IsEditEnabled = true;
        await InvokeAsync(StateHasChanged);
    }

    void Close()
    {
        selectedTenant = new();
        StateHasChanged();
    }

    public void Dispose()
    {
        dbc?.Dispose();
    }

}

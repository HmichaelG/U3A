// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using U3A.Database;

#nullable disable

namespace U3A.Database.Migrations.TenantStoreDb
{
    [DbContext(typeof(TenantStoreDbContext))]
    [Migration("20240406033746_Schedule")]
    partial class Schedule
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("U3A.Model.ContactRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("U3A")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactRequest");
                });

            modelBuilder.Entity("U3A.Model.Schedule", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenantIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("jsonClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("jsonClassEnrolments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("jsonCourseEnrolments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("U3A.Model.TenantInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EwayAPIKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EwayPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostmarkAPIKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostmarkSandboxAPIKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendGridAPIKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwilioAccountSID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwilioAuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwilioPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseEmailTestEnviroment")
                        .HasColumnType("bit");

                    b.Property<bool>("UseEwayTestEnviroment")
                        .HasColumnType("bit");

                    b.Property<bool>("UsePostmarkTestEnviroment")
                        .HasColumnType("bit");

                    b.Property<bool>("UseSMSTestEnviroment")
                        .HasColumnType("bit");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TenantInfo");
                });
#pragma warning restore 612, 618
        }
    }
}

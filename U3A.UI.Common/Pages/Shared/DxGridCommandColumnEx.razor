@inherits DxGridCommandColumn

@code {
    [Parameter]
    public EventCallback<object> OnDeleteButtonClick { get; set; }

    IGrid MyGrid { get; set; }
    protected override bool ShouldRender() => false;

    protected override void OnInitialized() {
        base.OnInitialized();
        MyGrid = (IGrid) this.Parent;
        Width = (EditButtonVisible && DeleteButtonVisible) ? "5rem" : "2rem";
        HeaderTemplate = context =>
@<text>
        @if (NewButtonVisible) {
          <DxButton RenderStyle="ButtonRenderStyle.Primary"
          RenderStyleMode="ButtonRenderStyleMode.Outline" title="Add new record"
          IconCssClass="bi bi-plus" Click="async () => await MyGrid.StartEditNewRowAsync()" />
        }
    </text>
    ;
        CellDisplayTemplate = context =>
    @<text>
        @if (EditButtonVisible) {
            <DxButton RenderStyle="ButtonRenderStyle.Warning"
              RenderStyleMode="ButtonRenderStyleMode.Outline" title="Edit this record"
              IconCssClass="bi bi-pencil" Click="async () => await MyGrid.StartEditDataItemAsync(context.DataItem)" />
        }
        @if (DeleteButtonVisible) {
            <DxButton RenderStyle="ButtonRenderStyle.Danger" title="Delete this record"
              RenderStyleMode="ButtonRenderStyleMode.Outline"
                  IconCssClass="bi bi-trash" Click="() => DoDeleteClick(context.DataItem)" />
        }
    </text>
        ;
        CellEditTemplate = context =>
    @<text>
        <DxButton RenderStyle="ButtonRenderStyle.Success"
              RenderStyleMode="ButtonRenderStyleMode.Outline" title="Save your changes"
              IconCssClass="bi bi-hdd" Click="async () => await MyGrid.SaveChangesAsync()" />
        <DxButton RenderStyle="ButtonRenderStyle.Danger" title="Cancel your changes"
              RenderStyleMode="ButtonRenderStyleMode.Outline"
              IconCssClass="bi bi-arrow-counterclockwise" Click="() => MyGrid.CancelEditAsync()" />
    </text>
    ;
    }

    async Task DoDeleteClick(object DataItem)
    {
        if (OnDeleteButtonClick.HasDelegate)
        {
            await OnDeleteButtonClick.InvokeAsync(DataItem);
        }
        else
        {
            MyGrid.ShowDataItemDeleteConfirmation(DataItem);
        }
    }

}
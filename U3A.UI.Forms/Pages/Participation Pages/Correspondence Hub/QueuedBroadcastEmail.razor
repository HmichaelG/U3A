@namespace U3A.UI.Forms

@using System
@using System.IO
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Logging
@using Microsoft.EntityFrameworkCore.Query
@using System.Text.Json

@inject IJSRuntime js
@inject IDbContextFactory<U3ADbContext> U3Adbfactory
@inject ILogger<QueuedBroadcastEmail> Logger
@inject IWebHostEnvironment Environment
@inject NavigationManager NavigationManager


@if (!isReady)
{
    <LoadingIndicator />
}
else
{
    <div class="px-2">
        <CollapsableContent DismissKey="{E580636E-C7CB-45FF-91A4-5AE4E3B0A2CF}"
        AlertText=@($@"<p><strong>Broadcast email</strong> queued and processed immediately<br />
                        unless a delayed start has been requested. Processed correspondence is deleted after 14 days.</p>")
        OnDismissChanged="@((bool IsDismissed) => OnContentChange(IsDismissed))"
        OnToggleAlert="@(async() => await fullScreen.RefreshLayout())" />

        <FullScreen @ref=@fullScreen DisplayOffset=@contentSize>
            <ContentTemplate>
                <QueuedBroadcastEmailGrid />
            </ContentTemplate>
        </FullScreen>
    </div>
}

@code {
    int contentSize;
    FullScreen? fullScreen;
    bool isReady;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        isReady = true;
    }

    void OnContentChange(bool IsDismissed)
    {
        contentSize = (IsDismissed) ? 8 : 16;
        StateHasChanged();
    }

}

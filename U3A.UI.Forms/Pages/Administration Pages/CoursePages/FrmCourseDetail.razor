@using System.ComponentModel
@using System.ComponentModel.DataAnnotations;

<MessageBox @ref="@messageBox" />

<DxFormLayout CssClass="px-4 pt-2">
    <DxFormLayoutItem Caption="Course Number" ColSpanMd="12">
        <DxMaskedInput @bind-Value="Course.ConversionID"
                       Mask="@NumericMask.WholeNumber" />
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Course Type" ColSpanMd="12">
        <DxComboBox Data="CourseTypes"
        @bind-Value="Course.CourseType"
                    TextFieldName="@nameof(CourseType.NameWithStatus)">
        </DxComboBox>
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Participation Type" ColSpanMd="8">
        <DxComboBox Data="CourseParticipationTypes"
                    Value="Course.CourseParticipationType"
                    ValueChanged="@((CourseParticipationType type) => OnCourseParticipationTypeChange(type))"
                    ValueExpression="@(() => Course.CourseParticipationType)"
                    TextFieldName="@nameof(CourseParticipationType.Name)">
        </DxComboBox>
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Enforce One Class Per Student?" ColSpanMd="4" Context="context" >
        <DxCheckBox @bind-Checked="Course.EnforceOneStudentPerClass"
                    Alignment=CheckBoxContentAlignment.Right Enabled=@isDifferentParticipantsInEachClass />
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Course Name" ColSpanMd="12">
        <DxTextBox @bind-Text="Course.Name" />
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Description" ColSpanMd="12">
        <DxMemo @bind-Text="Course.Description" Rows="5" />
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Additional Info URL" ColSpanMd="12">
        <DxTextBox @bind-Text="Course.AdditionalInformationURL" 
            NullText="A fully qualified URL: https://example.com.au. Keep it short, use TinyURL." ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"  />
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Class Duration (Hours)" ColSpanMd="3">
        <DxMaskedInput @bind-Value="Course.Duration"
                       Mask="n2" />
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Required Students" ColSpanMd="3">
        <DxMaskedInput @bind-Value="Course.RequiredStudents"
                       Mask="@NumericMask.WholeNumber" />
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Maximum Students" ColSpanMd="3">
        <DxMaskedInput @bind-Value="Course.MaximumStudents"
                       Mask="@NumericMask.WholeNumber" />
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Allow Auto-Enrol" ColSpanMd="3">
        <DxCheckBox @bind-Checked="Course.AllowAutoEnrol" />
    </DxFormLayoutItem>
    <DxFormLayoutGroup Caption="Course Fee" ColSpanMd="6">
        <DxFormLayoutItem Caption="Course Fee" ColSpanMd="12">
            <DxMaskedInput @bind-Value="Course.CourseFeePerYear" Mask="@NumericMask.Currency" />
        </DxFormLayoutItem>
        <DxFormLayoutItem Caption="Fee Description" ColSpanMd="12">
            <DxTextBox @bind-Text="Course.CourseFeePerYearDescription" />
        </DxFormLayoutItem>
        <DxFormLayoutItem Caption="Override Complimentary?" ColSpanMd="6">
            <DxCheckBox @bind-Checked="Course.OverrideComplimentaryPerYearFee" />
        </DxFormLayoutItem>
        <DxFormLayoutItem Caption="Leaders Pay Fee?" ColSpanMd="6">
            <DxCheckBox @bind-Checked="Course.LeadersPayYearFee" />
        </DxFormLayoutItem>
    </DxFormLayoutGroup>
    <DxFormLayoutGroup Caption="Term Fees" ColSpanMd="6">
        <DxFormLayoutItem Caption="Course Fee / Term" ColSpanMd="12">
            <DxMaskedInput @bind-Value="Course.CourseFeePerTerm" Mask="@NumericMask.Currency" />
        </DxFormLayoutItem>
        <DxFormLayoutItem Caption="Fee Description" ColSpanMd="12">
            <DxTextBox @bind-Text="Course.CourseFeePerTermDescription" />
        </DxFormLayoutItem>
        <DxFormLayoutItem Caption="Override Complimentary?" ColSpanMd="6">
            <DxCheckBox @bind-Checked="Course.OverrideComplimentaryPerTermFee" />
        </DxFormLayoutItem>
        <DxFormLayoutItem Caption="Leaders Pay Fee?" ColSpanMd="6">
            <DxCheckBox @bind-Checked="Course.LeadersPayTermFee" />
        </DxFormLayoutItem>
    </DxFormLayoutGroup>
</DxFormLayout>

@code {

    [Parameter]
    public bool AnyEnrolmentsInYear { get; set; }
    [Parameter]
    public Course Course { get; set; }
    [Parameter]
    public IEnumerable<CourseParticipationType> CourseParticipationTypes { get; set; }
    [Parameter]
    public IEnumerable<Person> Persons { get; set; }
    [Parameter]
    public IList<CourseType> CourseTypes { get; set; }
    [Parameter]
    public IEnumerable<Venue> Venues { get; set; }
    [Parameter]
    public IEnumerable<WeekDay> WeekDays { get; set; }
    [Parameter]
    public U3ADbContext? DbContext { get; set; }
    [Parameter]
    public SystemSettings Settings { get; set; }

    internal FrmClassDetailPopup? classDetail { get; set; }
    MessageBox? messageBox;
    string leaderReportsToNullText;
    string contactOrderNullText;
    bool isDifferentParticipantsInEachClass = false;

    protected override async Task OnParametersSetAsync()
    {
        isDifferentParticipantsInEachClass = (Course.CourseParticipationTypeID == 1) ? true : false;
        await base.OnParametersSetAsync();
    }

    async Task OnCourseParticipationTypeChange(CourseParticipationType participationType)
    {
        if (AnyEnrolmentsInYear)
        {
            await messageBox.ShowOkOnlyAsync("Participation Type cannot be changed",
                                               @"<p>The course participation type cannot be changed because enrolments
                   have already been assigned to it in the current year.</p>
                   <p>The safest way to to implement this change is...</p>
                   <ol><li>Create a completely new course, and then</li>
                   <li>Transfer enrolments from the old to the new via <em>Enrol Participants</em>.</li></ol>");
        }
        else { Course.CourseParticipationType = participationType; }
        isDifferentParticipantsInEachClass = (participationType.ID == 1) ? true : false;
    }

}

<DxComboBox Data="@Terms" NullText="Select the Term required..."
            TextFieldName="@nameof(Term.Name)" Enabled="@Enabled"
            @bind-Value="@SelectedTerm" >
    <Columns>
        <DxListEditorColumn FieldName="@nameof(Term.Name)" Caption="Term" Width="8rem" />
        <DxListEditorColumn FieldName="@nameof(Term.StartDateFormatted)" Caption="From" Width="10rem" />
        <DxListEditorColumn FieldName="@nameof(Term.EndDateFormatted)" Caption="To" Width="10rem" />
        <DxListEditorColumn FieldName="@nameof(Term.DurationFormatted)" Caption="Weeks" Width="5rem" />
    </Columns>

    <Buttons>
        <DxEditorButton Text="Process" CssClass="text-primary" Visible="ShowProcessButton"
                        IconCssClass="h5 bi bi-check-lg"
                        Tooltip="Click to process the selected term"
                        Click="async() => await OnProcessButtonClicked.InvokeAsync(SelectedTerm)" />
    </Buttons>
</DxComboBox>

@code {

    private Term _term;

    [Parameter, EditorRequired]
    public IEnumerable<Term> Terms { get; set; }

    [Parameter, EditorRequired]
    public Term SelectedTerm
    {
        get => _term;
        set
        {
            if (_term == value) { return; }
            _term = value;
            SelectedTermChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public bool ShowProcessButton { get; set; } = false;
    [Parameter]
    public bool Enabled { get; set; } = true;
    [Parameter]
    public EventCallback<Term> OnProcessButtonClicked { get; set; }
    [Parameter]
    public EventCallback<Term> SelectedTermChanged { get; set; }


}

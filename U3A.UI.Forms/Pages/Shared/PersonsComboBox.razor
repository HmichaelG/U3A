@if (People is not null)
{
    <DxComboBox Data="@People" Enabled="@Enabled"
    SearchMode="ListSearchMode.AutoSearch"
    ListRenderMode="ListRenderMode.Virtual"
    ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
    TextFieldName="@((ShowPersonSummary)
                                ? nameof(Person.PersonSummary)
                                : nameof(Person.FullName))"
    @bind-Value="@SelectedPerson" @bind-Value:after="@OnSelectedPersonChanged">
        <Columns>
            <DxListEditorColumn FieldName="@nameof(Person.FirstName)" Caption="First Name" Width="10rem" />
            <DxListEditorColumn FieldName="@nameof(Person.LastName)" Caption="Last Name" Width="10rem" />
            <DxListEditorColumn FieldName="@nameof(Person.Mobile)" Caption="Mobile" Width="10rem" />
            <DxListEditorColumn FieldName="@nameof(Person.Email)" Caption="Email" Width="15rem" />
            <DxListEditorColumn FieldName="@nameof(Person.FinancialToText)" Caption="Fin-To" Width="4rem" />
        </Columns>
    </DxComboBox>
}

@code {
    Person _person;
    [Parameter, EditorRequired]
    public Person SelectedPerson { get; set; }
    [Parameter, EditorRequired]
    public IEnumerable<Person> People { get; set; }
    [Parameter]
    public bool Enabled { get; set; } = true;
    [Parameter]
    public EventCallback<Person> SelectedPersonChanged { get; set; }
    [Parameter]
    public bool ShowPersonSummary { get; set; }

    async Task OnSelectedPersonChanged()
    {
        await SelectedPersonChanged.InvokeAsync(SelectedPerson);
        StateHasChanged();
    }

}

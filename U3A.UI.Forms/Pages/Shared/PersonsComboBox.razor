@if (People is not null)
{
    <DxComboBox Data="@People" Enabled="@Enabled"
                SearchMode="ListSearchMode.AutoSearch"
                ListRenderMode="ListRenderMode.Virtual"
                ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                TextFieldName="@((ShowPersonSummary)
                                ? nameof(Person.PersonSummary)
                                : nameof(Person.FullName))"
                @bind-Value="@SelectedPerson">
        <Columns>
            <DxListEditorColumn FieldName="@nameof(Person.FirstName)" Caption="First Name" Width="10rem" />
            <DxListEditorColumn FieldName="@nameof(Person.LastName)" Caption="Last Name" Width="10rem" />
            <DxListEditorColumn FieldName="@nameof(Person.Mobile)" Caption="Mobile" Width="10rem" />
            <DxListEditorColumn FieldName="@nameof(Person.Email)" Caption="Email" Width="20rem" />
            <DxListEditorColumn FieldName="@nameof(Person.FinancialToText)" Caption="Fin-To" Width="8rem" />
        </Columns>
        <Buttons>
            <DxEditorButton Text="Process" CssClass="text-primary" Visible="@ShowProcessButton"
                            IconCssClass="h5 bi bi-check-lg"
                            Tooltip="Click to process the selected member"
                            Click="async() => await OnProcessButtonClicked.InvokeAsync(SelectedPerson)" />
        </Buttons>

    </DxComboBox>
}

@code {
    Person _person;
    [Parameter, EditorRequired]
    public Person SelectedPerson
    {
        get => _person;
        set
        {
            if (_person == value) { return; }
            _person = value;
            SelectedPersonChanged.InvokeAsync(value);
        }
    }


    [Parameter, EditorRequired]
    public IEnumerable<Person> People { get; set; }
    [Parameter]
    public bool ShowProcessButton { get; set; } = false;
    [Parameter]
    public bool Enabled { get; set; } = true;
    [Parameter]
    public EventCallback<Person> OnProcessButtonClicked { get; set; }
    [Parameter]
    public EventCallback<Person> SelectedPersonChanged { get; set; }
    [Parameter]
    public bool ShowPersonSummary { get; set; }

}

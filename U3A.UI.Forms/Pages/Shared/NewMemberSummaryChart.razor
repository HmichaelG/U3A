@inject IDbContextFactory<U3ADbContext> U3Adbfactory
@inject IJSRuntime js

<Progress @ref=@progress />
<DxToolbar CssClass="my-1">
    <DxToolbarItem Alignment="ToolbarItemAlignment.Left">
        <Template>
            <DxFormLayoutItem Caption="Max Y-Axis breaks" Context="thisContext">
                <DxSpinEdit @bind-Value=@chartBreaks InputCssClass="col col-1" MinValue="0" MaxValue="5" />
            </DxFormLayoutItem>
        </Template>
    </DxToolbarItem>
    <DxToolbarItem Text="Retrieve Data" RenderStyle="ButtonRenderStyle.Primary" Click="OnProcess"
                   Alignment="ToolbarItemAlignment.Right"
                   IconCssClass="bi bi-database menu-icon" />
</DxToolbar>
<DxFormLayout>
    <DxFormLayoutGroup Caption="New Member Summary" ColSpanLg="9" CssClass="controlHeight">
        <DxChart Data="memberData" Id="newMemberChart"
                 Width="100%" CssClass="controlHeight"
                 LabelOverlap="ChartLabelOverlap.Hide">
            <DxChartStackedBarSeries Name="Male"
                                     Stack="true"
                                     Color="System.Drawing.Color.Blue"
                                     T="MemberSummary"
                                     TArgument="DateTime"
                                     TValue="int"
                                     ArgumentField="x => new DateTime(x.Year, x.Month, 1)"
                                     ValueField="x => x.Count"
                                     Filter='x => x.Group.ToLower() == "male"'>
            </DxChartStackedBarSeries>
            <DxChartStackedBarSeries Name="Female"
                                     Stack="true"
                                     Color=System.Drawing.Color.HotPink
                                     T="MemberSummary"
                                     TArgument="DateTime"
                                     TValue="int"
                                     ArgumentField="x => new DateTime(x.Year, x.Month, 1)"
                                     ValueField="x => x.Count"
                                     Filter='x => x.Group.ToLower() == "female"'>
            </DxChartStackedBarSeries>
            <DxChartStackedBarSeries Name="Other"
                                     Stack="true"
                                     Color=System.Drawing.Color.Purple
                                     T="MemberSummary"
                                     TArgument="DateTime"
                                     TValue="int"
                                     ArgumentField="x => new DateTime(x.Year, x.Month, 1)"
                                     ValueField="x => x.Count"
                                     Filter='x => x.Group.ToLower() == "other"'>
            </DxChartStackedBarSeries>
            <DxChartLegend Position="RelativePosition.Outside"
                           HorizontalAlignment="HorizontalAlignment.Right" />
            <DxChartTooltip Enabled="true">
                @context.Point.Render((seriesPoint) =>
                    @<div style="margin: 0.75rem">
                        <div>@seriesPoint.SeriesName</div>
                        <span>@($"{seriesPoint.Argument: MMM yyyy}: ")</span>
                        <span>@($"{seriesPoint.Value: 0,0}")</span>
                    </div>
                         )
            </DxChartTooltip>
            <DxChartValueAxis AutoBreaksEnabled="true" MaxAutoBreakCount="@chartBreaks" />
            <DxChartArgumentAxis TickInterval="ChartAxisTickInterval.Month" MinorTickInterval="ChartAxisTickInterval.Month">
                <DxChartAxisLabel Format="ChartElementFormat.MonthAndYear"></DxChartAxisLabel>
            </DxChartArgumentAxis>
        </DxChart>
    </DxFormLayoutGroup>
    <DxFormLayoutGroup Caption="New Members by Month" ColSpanLg="3">
        <DxGrid Data="@(memberData?.Where(x => x.Count != 0))" CssClass="controlHeight"
                ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                AutoExpandAllGroupRows="true"
                ShowFilterRow="false"
                ShowAllRows="true">
            <Columns>
                <DxGridDataColumn Caption="Gender" FieldName="Group" GroupIndex="0" />
                <DxGridDataColumn Caption="Year" FieldName="Year" GroupIndex="1" DisplayFormat="{0:D4}" />
                <DxGridDataColumn Caption="Month" FieldName="MonthName" />
                <DxGridDataColumn Caption="Members" FieldName="Count" DisplayFormat="{0:n0}" />
            </Columns>
            <GroupSummary>
                <DxGridSummaryItem FooterColumnName="Count"
                                   SummaryType="GridSummaryItemType.Sum" FieldName="Count" ValueDisplayFormat="{0:n0}" />
            </GroupSummary>
            <TotalSummary>
                <DxGridSummaryItem SummaryType="GridSummaryItemType.Sum" FieldName="Count" />
            </TotalSummary>
        </DxGrid>
    </DxFormLayoutGroup>
</DxFormLayout>

<style>
    .controlHeight {
        height: calc(100dvh - @(Workstation.UseTopMenu ? "18rem" : "14rem"));
    }
</style>


@code {
    IEnumerable<MemberSummary> memberData;
    Progress? progress;
    int chartBreaks = 0;

    async Task OnProcess()
    {
        using (var dbc = await U3Adbfactory.CreateDbContextAsync())
        {
            await progress?.ShowSmallSpinnerAsync();
            memberData = await BusinessRule.GetNewMemberSummaryByMonth(dbc);
            await progress?.Close();
        }
    }
}
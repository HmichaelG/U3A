@inject IDbContextFactory<U3ADbContext> U3Adbfactory

<DxFormLayoutGroup Caption="@($"Leadership History for: {SelectedPerson?.FullName}")" HeaderCssClass="h4">
    <div class="h-25 overflow-auto">
        <DxGrid Data="@leadersHistory" @ref="@grid"
                TextWrapEnabled=false
                ColumnResizeMode="GridColumnResizeMode.NextColumn"
                AllowSorting=false
                AllowFiltering=false
                AllowResize="true"
                AllowGrouping=true
                AutoExpandAllGroupRows=true
                VirtualScrollingEnabled=true
                CssClass="@CssClass">
            <Columns>
                <DxGridDataColumn FieldName="Year" Caption="Year"
                    DisplayFormat="{0:0000}" 
                    GroupIndex="0" 
                    SortOrder="GridColumnSortOrder.Descending" />
                <DxGridDataColumn FieldName="Course" Caption="Course" GroupIndex="1" />
                <DxGridDataColumn FieldName="TermName" Caption="Term" />
                <DxGridDataColumn FieldName="TypeName" Caption="Type" />
                <DxGridDataColumn FieldName="Class" Caption="Class" />
            </Columns>
        </DxGrid>
    </div>

</DxFormLayoutGroup>

@code {

    [Parameter]
    public Person SelectedPerson { get; set; }

    [Parameter]
    public string CssClass { get; set; }

    List<LeaderHistory> leadersHistory = new();
    DxGrid? grid;

    protected override async Task OnParametersSetAsync()
    {
        if (SelectedPerson != null)
        {
            using (var dbc = U3Adbfactory.CreateDbContext())
            {
                leadersHistory = await BusinessRule.GetLeaderHistoryForPersonAsync(dbc, SelectedPerson.ID);
            }
        }
    }


}

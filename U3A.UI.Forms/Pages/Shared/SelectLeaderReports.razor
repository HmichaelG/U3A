@namespace U3A.UI.Forms

<MessageBox @ref="@messageBox" />
<DxFormLayoutGroup Caption="Select Report" ColSpanMd="12">
    @if (SingleReportOnly)
    {
        <DxRadioGroup Items="@reports"
        @bind-Value="@selectedReport" />
    }
    else
    {
        <div class="col @($"col-{ColSpan}")">
            <DxFormLayoutItem Caption="@(reports[0])" ColSpanMd="12">
                <DxCheckBox @bind-Checked="@PrintLeaderReport" Alignment="CheckBoxContentAlignment.Right" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Class Contact List" ColSpanMd="12">
                <DxCheckBox @bind-Checked="@PrintClassList" Alignment="CheckBoxContentAlignment.Right" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="In Case of Emergency List" ColSpanMd="12">
                <DxCheckBox @bind-Checked="@PrintICEList" Alignment="CheckBoxContentAlignment.Right" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Attendance Record" ColSpanMd="12">
                <DxCheckBox @bind-Checked="@PrintAttendanceRecord" Alignment="CheckBoxContentAlignment.Right" />
            </DxFormLayoutItem>
        </div>
        <div class="col @($"col-{ColSpan}")">
            <DxFormLayoutItem Caption="Attendance Analysis" ColSpanMd="12">
                <DxCheckBox @bind-Checked="@PrintAttendanceAnalysis" Alignment="CheckBoxContentAlignment.Right" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Member Badges" ColSpanMd="12">
                <DxCheckBox @bind-Checked="@PrintMemberBadges" Alignment="CheckBoxContentAlignment.Right" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Class CSV file" ColSpanMd="12">
                <DxCheckBox @bind-Checked="@PrintCSVFile" Alignment="CheckBoxContentAlignment.Right" />
            </DxFormLayoutItem>
        </div>
    }
</DxFormLayoutGroup>
@if (SingleReportOnly)
{
    <DxButton Text="Print Report" IconCssClass="bi bi-print menu-icon" CssClass="col col-12"
    Enabled="@AreSelectionsMade"
    RenderStyle="ButtonRenderStyle.Primary" Click="@DoPrintAsync" />
}
else
{
    <DxButton Text="Queue Report(s) for email" IconCssClass="bi bi-envelope menu-icon" CssClass="col col-12"
    Enabled="@AreSelectionsMade"
    RenderStyle="ButtonRenderStyle.Primary" Click="@DoMailAsync" />
}
@code {
    [Parameter]
    public bool SingleReportOnly { get; set; }
    [Parameter]
    public int ColSpan { get; set; } = 12;

    [Parameter, EditorRequired]
    public bool AreSelectionsMade { get; set; }

    public bool PrintLeaderReport { get; set; }
    public bool PrintClassList { get; set; }
    public bool PrintICEList { get; set; }
    public bool PrintAttendanceRecord { get; set; }
    public bool PrintAttendanceAnalysis { get; set; }
    public bool PrintMemberBadges { get; set; }
    public bool PrintCSVFile { get; set; }
    public bool RequireEnrolements
    {
        get
        {
            return PrintAttendanceRecord || PrintICEList || PrintClassList || PrintLeaderReport || PrintMemberBadges || PrintCSVFile;
        }
    }
    MessageBox? messageBox;

    static List<string> reports = new() { "Leader Report",
                                            "Class Contact List",
                                            "In Case of Emergency List",
                                            "Attendance Record",
                                            "Attendance Analysis",
                                            "Member Badges"};
    string selectedReport = reports[0];

    [Parameter]
    public EventCallback<PortalMenuSelection> OnQueueReportsSelected { get; set; }

    async void DoMailAsync()
    {
        InvokeAsync(StateHasChanged); await OnQueueReportsSelected.InvokeAsync();
    }
    async void DoPrintAsync()
    {
        PrintLeaderReport = false;
        PrintClassList = false;
        PrintICEList = false;
        PrintAttendanceRecord = false;
        PrintAttendanceAnalysis = false;
        if (selectedReport == reports[0]) PrintLeaderReport = true;
        if (selectedReport == reports[1]) PrintClassList = true;
        if (selectedReport == reports[2]) PrintICEList = true;
        if (selectedReport == reports[3]) PrintAttendanceRecord = true;
        if (selectedReport == reports[4]) PrintAttendanceAnalysis = true;
        if (selectedReport == reports[5]) PrintMemberBadges = true;
        if (!PrintLeaderReport &&
             !PrintClassList &&
             !PrintICEList &&
             !PrintAttendanceRecord &&
             !PrintAttendanceAnalysis && !PrintMemberBadges)
        {
            await messageBox.ShowOkOnlyAsync("Select Report", "A report must be selected.");
        }
        else { InvokeAsync(StateHasChanged); await OnQueueReportsSelected.InvokeAsync(); }
    }

}

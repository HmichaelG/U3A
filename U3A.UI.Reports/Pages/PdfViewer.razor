@page "/PdfViewer"
@page "/PdfViewerViewer/{ReportName?}"

@using Microsoft.AspNetCore.Components.Forms

<PageTitle>U3A Report</PageTitle>

@inject NavigationManager NavMan
@inject WorkstationService ws

@using DevExpress.Blazor.PdfViewer
@using DevExpress.XtraPrinting
@using U3A.Services
@using U3A.UI.Common.Pages.Shared
@using DevExpress.Blazor.Reporting.Models
@using Microsoft.Extensions.DependencyInjection

@attribute [Authorize]


@if (!isReady)
{
    <LoadingIndicator />
}
else
{
    <DxWindow Visible=@PdfIsReady @ref="@reportViewer" Width="100dvw"
    Height="100dvh"
    PositionY="0"
    CloseOnEscape="false"
    ShowHeader="false">
        <BodyContentTemplate Context="PopupContext">
            <DxPdfViewer ZoomLevel="1" DocumentContent="@DocumentContent" DocumentName="@ReportTitle"
            CustomizeToolbar="@((ToolbarModel toolbarModel) => {
        toolbarModel.AllItems.Add(new ToolbarItem()
            {
                IconCssClass = "exit-icon",
                BeginGroup = true,
                Text = "Close Report",
                AdaptiveText = "Close Report",
                AdaptivePriority = 1,
                Click = async (args) => {PdfIsReady = false; await OnCloseButtonClick.InvokeAsync();},
                });
            })"
            CssClass="w-100 h-100" />
        </BodyContentTemplate>
    </DxWindow>
}

@code {
    DxWindow? reportViewer;
    [Parameter]
    public bool PdfIsReady { get; set; }
    [Parameter]
    public Byte[] DocumentContent { get; set; }
    [Parameter]
    public string ReportTitle { get; set; } = "PDF Report";
    [Parameter]
    public XtraReport FileName { get; set; }
    [Parameter]
    public EventCallback OnCloseButtonClick { get; set; }

    bool isReady;

    protected override async Task OnInitializedAsync()
    {
        if (FileName is not null)
        {
            using (var ms = new MemoryStream())
            {
                await FileName.ExportToPdfAsync(ms);
                ms.Position = 0;
                DocumentContent = ms.ToArray();
            }
        }
        isReady = true;
    }

}